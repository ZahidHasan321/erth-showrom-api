name: Deploy to Amazon ECR and Lambda

on:
  push:
    branches: [main]

env:
  AWS_REGION: me-central-1
  ECR_REPOSITORY: erth-showroom/fastapi-docker
  LAMBDA_FUNCTION_NAME: fastapi-lambda
  IMAGE_TAG: ${{ github.sha }}

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          
      # - name: Deploy new image and set application secrets on Lambda
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     IMAGE_URI: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
      #   run: |
      #     FUNCTION_NAME=${{ env.LAMBDA_FUNCTION_NAME }}
          
      #     # 1. Update the Lambda function code to use the new ECR image
      #     echo "Updating function code with new image URI: $IMAGE_URI"
      #     aws lambda update-function-code \
      #       --function-name $FUNCTION_NAME \
      #       --image-uri $IMAGE_URI
            
      #     # ðŸš¨ 2. WAIT for the code update to complete before proceeding ðŸš¨
      #     echo "Waiting for the Lambda code update to finish..."
      #     aws lambda wait function-updated --function-name $FUNCTION_NAME
      #     echo "Code update complete. Proceeding to configuration update."
            
      #     # 3. Update the Lambda function configuration with the secrets
      #     echo "Setting application environment variables on Lambda..."
      #     aws lambda update-function-configuration \
      #       --function-name $FUNCTION_NAME \
      #       --environment '{"Variables":{
      #         "AIRTABLE_API_KEY": "${{ secrets.AIRTABLE_API_KEY }}",
      #         "AIRTABLE_BASE_ID": "${{ secrets.AIRTABLE_BASE_ID }}"
      #         }}'
          
      #     # Optional: Wait again for the configuration update to finish
      #     echo "Waiting for the Lambda configuration update to finish..."
      #     aws lambda wait function-updated --function-name $FUNCTION_NAME
      #     echo "Deployment successful!"