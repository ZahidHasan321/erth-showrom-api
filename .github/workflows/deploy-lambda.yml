name: Deploy to Amazon ECR and Lambda

on:
  push:
    branches: [main]

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: erth-showroom/fastapi-docker
  LAMBDA_FUNCTION_NAME: fastapi-lambda
  IMAGE_TAG: ${{ github.sha }}

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    secrets:
      AWS_IAM_ROLE: ${{ secrets.AWS_IAM_ROLE }}
      AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }} 
      AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }} 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          
      - name: Deploy new image and set application secrets on Lambda
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_URI: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        run: |
          # 1. Update the Lambda function code to use the new ECR image
          echo "Updating function code with new image URI: $IMAGE_URI"
          aws lambda update-function-code \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --image-uri ${{ env.IMAGE_URI }}
            
          # 2. Update the Lambda function configuration with the secrets
          echo "Setting application environment variables on Lambda..."
          aws lambda update-function-configuration \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --environment '{"Variables":{
              "AIRTABLE_API_KEY": "${{ secrets.AIRTABLE_API_KEY }}",
              "AIRTABLE_BASE_ID": "${{ secrets.AIRTABLE_BASE_ID }}"
              }}'